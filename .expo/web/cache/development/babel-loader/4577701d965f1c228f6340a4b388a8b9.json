{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Giovanni\\\\Desktop\\\\Effioz\\\\src\\\\Screens\\\\pagesRes\\\\Ressources.js\";\nimport * as React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { FlatList } from \"react-native-gesture-handler\";\nimport Accordeon from \"../../Components/accordeon\";\nimport audioBookPlaylist from \"../../data/podcastsData\";\nimport citationPlaylist from \"../../data/citationData\";\nimport articlePlaylist from \"../../data/articleData\";\nimport videoPlaylist from \"../../data/videoData\";\nvar types = {\n  books: 'books',\n  podcasts: 'podcasts',\n  citations: 'Citations',\n  articles: 'Articles',\n  vidéos: 'Vidéos'\n};\nvar datapod = [];\n\nfor (var i in audioBookPlaylist) {\n  datapod.push(audioBookPlaylist[i].title);\n}\n\nvar dataarticle = [];\n\nfor (var _i in articlePlaylist) {\n  dataarticle.push(articlePlaylist[_i].title);\n}\n\nvar datacitation = [];\n\nfor (var _i2 in citationPlaylist) {\n  datacitation.push(citationPlaylist[_i2].title);\n}\n\nvar datavideo = [];\n\nfor (var _i3 in videoPlaylist) {\n  datavideo.push(videoPlaylist[_i3].title);\n}\n\nvar data = [{\n  title: \"livres\",\n  content: [\"livre1\", \"livre2\", \"livre3\", \"livre4\", \"livre5\"],\n  type: types.books\n}, {\n  title: \"Podcasts\",\n  content: datapod,\n  type: types.podcasts\n}, {\n  title: \"Citations\",\n  content: datacitation,\n  type: types.citations\n}, {\n  title: \"Articles\",\n  content: dataarticle,\n  type: types.articles\n}, {\n  title: \"Vidéos\",\n  content: datavideo,\n  type: types.vidéos\n}];\n\nfunction RessourceScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var openPodcasts = function openPodcasts(index) {\n    navigation.navigate({\n      name: 'Podcasts',\n      params: {\n        index: index\n      }\n    });\n  };\n\n  var openCitations = function openCitations(index) {\n    navigation.navigate({\n      name: 'Citations',\n      params: {\n        index: index\n      }\n    });\n  };\n\n  var openArticles = function openArticles(index) {\n    navigation.navigate({\n      name: 'Articles',\n      params: {\n        index: index\n      }\n    });\n  };\n\n  var openVideos = function openVideos(index) {\n    navigation.navigate({\n      name: 'Videos',\n      params: {\n        index: index\n      }\n    });\n  };\n\n  return React.createElement(View, {\n    style: {\n      backgroundColor: \"rgba(255, 165, 0, 0.4)\",\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, React.createElement(FlatList, {\n    data: data,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(Accordeon, {\n        name: item.title,\n        content: item.content,\n        onPressItem: function onPressItem(index) {\n          if (item.type == types.books) {} else if (item.type == types.podcasts) {\n            openPodcasts(index);\n          } else if (item.type == types.citations) {\n            openCitations(index);\n          } else if (item.type == types.articles) {\n            openArticles(index);\n          } else if (item.type == types.vidéos) {\n            openVideos(index);\n          }\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.title;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  item: {\n    fontSize: 30,\n    fontWeight: \"bold\",\n    marginTop: 20,\n    marginLeft: 20\n  }\n});\nexport default RessourceScreen;","map":{"version":3,"sources":["C:/Users/Giovanni/Desktop/Effioz/src/Screens/pagesRes/Ressources.js"],"names":["React","FlatList","Accordeon","audioBookPlaylist","citationPlaylist","articlePlaylist","videoPlaylist","types","books","podcasts","citations","articles","vidéos","datapod","i","push","title","dataarticle","datacitation","datavideo","data","content","type","RessourceScreen","navigation","openPodcasts","index","navigate","name","params","openCitations","openArticles","openVideos","backgroundColor","flex","item","styles","StyleSheet","create","fontSize","fontWeight","marginTop","marginLeft"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport { View, Text, StyleSheet } from \"react-native\";\r\nimport { FlatList } from \"react-native-gesture-handler\";\r\nimport Accordeon from \"../../Components/accordeon\";\r\nimport audioBookPlaylist from \"../../data/podcastsData\";\r\nimport citationPlaylist from \"../../data/citationData\";\r\nimport articlePlaylist from \"../../data/articleData\";\r\nimport videoPlaylist from \"../../data/videoData\";\r\n\r\nconst types = {\r\n    books: 'books',\r\n    podcasts: 'podcasts',\r\n    citations: 'Citations',\r\n    articles: 'Articles', \r\n    vidéos: 'Vidéos',\r\n }\r\n\r\nconst datapod = []\r\nfor (const i in audioBookPlaylist) {\r\n    datapod.push( audioBookPlaylist[i].title );\r\n}\r\n\r\nconst dataarticle = []\r\nfor (const i in articlePlaylist) {\r\n    dataarticle.push( articlePlaylist[i].title );\r\n}\r\n\r\nconst datacitation = []\r\nfor (const i in citationPlaylist) {\r\n    datacitation.push( citationPlaylist[i].title );\r\n}\r\n\r\nconst datavideo = []\r\nfor (const i in videoPlaylist) {\r\n    datavideo.push( videoPlaylist[i].title );\r\n}\r\n\r\nconst data = [\r\n    {\r\n        title: \"livres\",\r\n        content: [\"livre1\", \"livre2\", \"livre3\", \"livre4\", \"livre5\"],\r\n        type: types.books,\r\n    },\r\n    {\r\n        title: \"Podcasts\",\r\n        content: datapod ,\r\n        type: types.podcasts,\r\n    },\r\n    {\r\n        title: \"Citations\",\r\n        content: datacitation,\r\n        type: types.citations,\r\n    },\r\n    {\r\n        title: \"Articles\",\r\n        content: dataarticle, \r\n        type: types.articles, \r\n    },\r\n    {\r\n        title: \"Vidéos\",\r\n        content: datavideo,\r\n        type: types.vidéos,\r\n    },\r\n];\r\n\r\nfunction RessourceScreen({ navigation }) {\r\n    \r\n    const openPodcasts = (index) => {\r\n    navigation.navigate({\r\n        name: 'Podcasts',\r\n        params: { index },\r\n        // merge: true,\r\n      });\r\n    };\r\n\r\n    const openCitations = (index) => {\r\n    navigation.navigate({\r\n        name: 'Citations',\r\n        params: { index },\r\n        // merge: true,\r\n      });\r\n    };\r\n\r\n    const openArticles = (index) => {\r\n    navigation.navigate({\r\n        name: 'Articles',\r\n        params: { index },\r\n        // merge: true,\r\n      });\r\n    };\r\n\r\n    const openVideos = (index) => {\r\n    navigation.navigate({\r\n        name: 'Videos',\r\n        params: { index },\r\n        // merge: true,\r\n      });\r\n    };\r\n\r\n    return (\r\n            <View style={{backgroundColor: \"rgba(255, 165, 0, 0.4)\", flex: 1 }}>\r\n                <FlatList\r\n                    data={data}\r\n                    renderItem={({ item }) => (\r\n                        <Accordeon\r\n                            name={item.title}\r\n                            content={item.content}\r\n                            onPressItem={(index) => {\r\n                                if(item.type == types.books){\r\n                                    // naviguer vers livre\r\n                                } \r\n                                else if(item.type == types.podcasts) {\r\n                                    openPodcasts(index)\r\n                                }\r\n                                else if(item.type == types.citations){\r\n                                    openCitations(index)\r\n                                } \r\n                                else if(item.type == types.articles){\r\n                                    openArticles(index)\r\n                                } \r\n                                else if(item.type == types.vidéos){\r\n                                    openVideos(index)\r\n                                } \r\n                            }}\r\n                        />\r\n                    )}\r\n                    keyExtractor={(item) => item.title}\r\n                />\r\n            </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    item: {\r\n        fontSize: 30,\r\n        fontWeight: \"bold\",\r\n        marginTop: 20,\r\n        marginLeft: 20,\r\n    },\r\n});\r\n\r\nexport default RessourceScreen;\r\n"]},"metadata":{},"sourceType":"module"}